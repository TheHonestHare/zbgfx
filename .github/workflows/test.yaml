name: Test

permissions:
  checks: write

on:
  pull_request:
    branches:
      - main
      - unstable
    paths:
      - ".github/workflows/**"
      - "src/**"
      - "examples/**"
      - "libs/**"
      - "tools/**"
      - "build.zig"
      - "build.zig.zon"

  push:
    branches:
      - main
    paths:
      - ".github/workflows/**"
      - "src/**"
      - "examples/**"
      - "libs/**"
      - "tools/**"
      - "build.zig"
      - "build.zig.zon"

concurrency:
  # Cancels pending runs when a PR gets updated.
  group: ${{ github.head_ref || github.run_id }}-${{ github.actor }}
  cancel-in-progress: true

jobs:
  validation:
    name: Validation
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Read .zig-version
        id: zigversion
        uses: juliangruber/read-file-action@v1
        with:
          path: ./.zigversion
      - name: Install Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: ${{ steps.zigversion.outputs.content }}

      - name: Lint
        run: zig fmt --check .

  build-examples:
    needs: ["validation"]
    strategy:
      fail-fast: false
      matrix:
        os: [linux-large, macos-13-large, windows-large]
    runs-on: ${{matrix.os}}
    name: "Build examples"
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Read .zig-version
        id: zigversion
        uses: juliangruber/read-file-action@v1
        with:
          path: ./.zigversion
      - name: Install Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: ${{ steps.zigversion.outputs.content }}
    
      - name: Build example 00
        shell: bash
        run: cd examples/00-minimal && zig build
      - name: Build example 01
        shell: bash
        run: cd examples/01-zgui && zig build
      - name: Build example 02
        shell: bash
        run: cd examples/02-runtime-shaderc && zig build
